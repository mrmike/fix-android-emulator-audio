#!/usr/bin/env bash

DEFAULT_AVD_PATH=~/.android/avd

function run_sed {
    if [ "$(uname)" == "Darwin" ]; then
        # macOS requires extra argument for -i param
        sed -i '' $1 $2
    else
        sed -i $1 $2
    fi
}

# Check the number of arguments
if [ "$#" -gt 2 ]; then
    echo "‚ùå Too many arguments."
    echo "Usage: $0 <avd-path>"
    exit 1
fi

temp_avd_path=""
has_wipe_option=0
# Read user arguments
for arg in "$@"
do
    if [ $arg == "--wipe" ]; then
        has_wipe_option=1
    else
        temp_avd_path=$arg
    fi
done

# Use provided path by user or fallback to the default one
avd_path=${temp_avd_path:-$DEFAULT_AVD_PATH}
# Remove trailing slash if present
avd_path=${avd_path%/}
echo "üîä Processing emulators from: $avd_path"

for emulator in $(find $avd_path -type d -name '*.avd'); do   
    if [ ! -f $emulator/config.ini ]; then
        echo "‚ùå Skipping emulator - could not config.ini inside $emulator"
        continue
    fi
    echo "üîä Processing - $(basename $emulator)"

    # Remove line hw.audioInput - if exists
    run_sed '/^hw.audioInput/d' $emulator/config.ini
    
    # Remove line hw.audioOutput - if exists
    run_sed '/^hw.audioOutput/d' $emulator/config.ini
    
    # Disable audio input and output
    echo "hw.audioInput=no" >> $emulator/config.ini
    echo "hw.audioOutput=no" >> $emulator/config.ini

    # Sort config keys
    sort -o $emulator/config.ini $emulator/config.ini

    # Wipe data when --wipe argument is present
    if [ $has_wipe_option -eq 1 ]; then
        echo "üóëÔ∏è  Wiping data from: $(basename $emulator)"
        rm -rf $emulator/snapshots
        rm -f $emulator/userdata.img $emulator/userdata-qemu.img
    fi

    echo "‚úÖ Done - $(basename $emulator)"
done